/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface RuiAlert {
        "label"?: string;
    }
    interface RuiAvatar {
        "class": string;
        "label": string;
        "type": string;
    }
    interface RuiButton {
        "label": string;
    }
    interface RuiCheckbox {
        "cboxName": string;
        "colour": string;
        "labelAfter"?: boolean;
        "labelBefore"?: boolean;
    }
    interface RuiDivider {
        "colour"?: string;
        "type": string;
    }
    interface RuiInput {
        "floatingLabel"?: string;
        "label"?: string;
        "placeholder"?: string;
    }
    interface RuiLoader {
        "label"?: string;
    }
    interface RuiModal {
        "label"?: string;
    }
    interface RuiPagination {
        "label": string;
    }
    interface RuiPill {
        "bgStyle": string;
        "iconAfter"?: boolean;
        "iconBefore"?: boolean;
        "label": string;
        "textHoverStyle": string;
        "textStyle": string;
    }
    interface RuiRadio {
        "label"?: string;
    }
    interface RuiSelect {
        "label"?: string;
    }
    interface RuiSwitch {
        "label"?: string;
    }
    interface RuiToast {
        "label"?: string;
    }
    interface RuiTooltip {
        "label"?: string;
    }
}
declare global {
    interface HTMLRuiAlertElement extends Components.RuiAlert, HTMLStencilElement {
    }
    var HTMLRuiAlertElement: {
        prototype: HTMLRuiAlertElement;
        new (): HTMLRuiAlertElement;
    };
    interface HTMLRuiAvatarElement extends Components.RuiAvatar, HTMLStencilElement {
    }
    var HTMLRuiAvatarElement: {
        prototype: HTMLRuiAvatarElement;
        new (): HTMLRuiAvatarElement;
    };
    interface HTMLRuiButtonElement extends Components.RuiButton, HTMLStencilElement {
    }
    var HTMLRuiButtonElement: {
        prototype: HTMLRuiButtonElement;
        new (): HTMLRuiButtonElement;
    };
    interface HTMLRuiCheckboxElement extends Components.RuiCheckbox, HTMLStencilElement {
    }
    var HTMLRuiCheckboxElement: {
        prototype: HTMLRuiCheckboxElement;
        new (): HTMLRuiCheckboxElement;
    };
    interface HTMLRuiDividerElement extends Components.RuiDivider, HTMLStencilElement {
    }
    var HTMLRuiDividerElement: {
        prototype: HTMLRuiDividerElement;
        new (): HTMLRuiDividerElement;
    };
    interface HTMLRuiInputElement extends Components.RuiInput, HTMLStencilElement {
    }
    var HTMLRuiInputElement: {
        prototype: HTMLRuiInputElement;
        new (): HTMLRuiInputElement;
    };
    interface HTMLRuiLoaderElement extends Components.RuiLoader, HTMLStencilElement {
    }
    var HTMLRuiLoaderElement: {
        prototype: HTMLRuiLoaderElement;
        new (): HTMLRuiLoaderElement;
    };
    interface HTMLRuiModalElement extends Components.RuiModal, HTMLStencilElement {
    }
    var HTMLRuiModalElement: {
        prototype: HTMLRuiModalElement;
        new (): HTMLRuiModalElement;
    };
    interface HTMLRuiPaginationElement extends Components.RuiPagination, HTMLStencilElement {
    }
    var HTMLRuiPaginationElement: {
        prototype: HTMLRuiPaginationElement;
        new (): HTMLRuiPaginationElement;
    };
    interface HTMLRuiPillElement extends Components.RuiPill, HTMLStencilElement {
    }
    var HTMLRuiPillElement: {
        prototype: HTMLRuiPillElement;
        new (): HTMLRuiPillElement;
    };
    interface HTMLRuiRadioElement extends Components.RuiRadio, HTMLStencilElement {
    }
    var HTMLRuiRadioElement: {
        prototype: HTMLRuiRadioElement;
        new (): HTMLRuiRadioElement;
    };
    interface HTMLRuiSelectElement extends Components.RuiSelect, HTMLStencilElement {
    }
    var HTMLRuiSelectElement: {
        prototype: HTMLRuiSelectElement;
        new (): HTMLRuiSelectElement;
    };
    interface HTMLRuiSwitchElement extends Components.RuiSwitch, HTMLStencilElement {
    }
    var HTMLRuiSwitchElement: {
        prototype: HTMLRuiSwitchElement;
        new (): HTMLRuiSwitchElement;
    };
    interface HTMLRuiToastElement extends Components.RuiToast, HTMLStencilElement {
    }
    var HTMLRuiToastElement: {
        prototype: HTMLRuiToastElement;
        new (): HTMLRuiToastElement;
    };
    interface HTMLRuiTooltipElement extends Components.RuiTooltip, HTMLStencilElement {
    }
    var HTMLRuiTooltipElement: {
        prototype: HTMLRuiTooltipElement;
        new (): HTMLRuiTooltipElement;
    };
    interface HTMLElementTagNameMap {
        "rui-alert": HTMLRuiAlertElement;
        "rui-avatar": HTMLRuiAvatarElement;
        "rui-button": HTMLRuiButtonElement;
        "rui-checkbox": HTMLRuiCheckboxElement;
        "rui-divider": HTMLRuiDividerElement;
        "rui-input": HTMLRuiInputElement;
        "rui-loader": HTMLRuiLoaderElement;
        "rui-modal": HTMLRuiModalElement;
        "rui-pagination": HTMLRuiPaginationElement;
        "rui-pill": HTMLRuiPillElement;
        "rui-radio": HTMLRuiRadioElement;
        "rui-select": HTMLRuiSelectElement;
        "rui-switch": HTMLRuiSwitchElement;
        "rui-toast": HTMLRuiToastElement;
        "rui-tooltip": HTMLRuiTooltipElement;
    }
}
declare namespace LocalJSX {
    interface RuiAlert {
        "label"?: string;
    }
    interface RuiAvatar {
        "class"?: string;
        "label"?: string;
        "type"?: string;
    }
    interface RuiButton {
        "label"?: string;
    }
    interface RuiCheckbox {
        "cboxName"?: string;
        "colour"?: string;
        "labelAfter"?: boolean;
        "labelBefore"?: boolean;
    }
    interface RuiDivider {
        "colour"?: string;
        "type"?: string;
    }
    interface RuiInput {
        "floatingLabel"?: string;
        "label"?: string;
        "placeholder"?: string;
    }
    interface RuiLoader {
        "label"?: string;
    }
    interface RuiModal {
        "label"?: string;
    }
    interface RuiPagination {
        "label"?: string;
    }
    interface RuiPill {
        "bgStyle"?: string;
        "iconAfter"?: boolean;
        "iconBefore"?: boolean;
        "label": string;
        "textHoverStyle"?: string;
        "textStyle"?: string;
    }
    interface RuiRadio {
        "label"?: string;
    }
    interface RuiSelect {
        "label"?: string;
    }
    interface RuiSwitch {
        "label"?: string;
    }
    interface RuiToast {
        "label"?: string;
    }
    interface RuiTooltip {
        "label"?: string;
    }
    interface IntrinsicElements {
        "rui-alert": RuiAlert;
        "rui-avatar": RuiAvatar;
        "rui-button": RuiButton;
        "rui-checkbox": RuiCheckbox;
        "rui-divider": RuiDivider;
        "rui-input": RuiInput;
        "rui-loader": RuiLoader;
        "rui-modal": RuiModal;
        "rui-pagination": RuiPagination;
        "rui-pill": RuiPill;
        "rui-radio": RuiRadio;
        "rui-select": RuiSelect;
        "rui-switch": RuiSwitch;
        "rui-toast": RuiToast;
        "rui-tooltip": RuiTooltip;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "rui-alert": LocalJSX.RuiAlert & JSXBase.HTMLAttributes<HTMLRuiAlertElement>;
            "rui-avatar": LocalJSX.RuiAvatar & JSXBase.HTMLAttributes<HTMLRuiAvatarElement>;
            "rui-button": LocalJSX.RuiButton & JSXBase.HTMLAttributes<HTMLRuiButtonElement>;
            "rui-checkbox": LocalJSX.RuiCheckbox & JSXBase.HTMLAttributes<HTMLRuiCheckboxElement>;
            "rui-divider": LocalJSX.RuiDivider & JSXBase.HTMLAttributes<HTMLRuiDividerElement>;
            "rui-input": LocalJSX.RuiInput & JSXBase.HTMLAttributes<HTMLRuiInputElement>;
            "rui-loader": LocalJSX.RuiLoader & JSXBase.HTMLAttributes<HTMLRuiLoaderElement>;
            "rui-modal": LocalJSX.RuiModal & JSXBase.HTMLAttributes<HTMLRuiModalElement>;
            "rui-pagination": LocalJSX.RuiPagination & JSXBase.HTMLAttributes<HTMLRuiPaginationElement>;
            "rui-pill": LocalJSX.RuiPill & JSXBase.HTMLAttributes<HTMLRuiPillElement>;
            "rui-radio": LocalJSX.RuiRadio & JSXBase.HTMLAttributes<HTMLRuiRadioElement>;
            "rui-select": LocalJSX.RuiSelect & JSXBase.HTMLAttributes<HTMLRuiSelectElement>;
            "rui-switch": LocalJSX.RuiSwitch & JSXBase.HTMLAttributes<HTMLRuiSwitchElement>;
            "rui-toast": LocalJSX.RuiToast & JSXBase.HTMLAttributes<HTMLRuiToastElement>;
            "rui-tooltip": LocalJSX.RuiTooltip & JSXBase.HTMLAttributes<HTMLRuiTooltipElement>;
        }
    }
}
